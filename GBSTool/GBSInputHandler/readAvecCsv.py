# TODO: File header here
# TODO: Use more comments throughout ;-)
# TODO: Bundle all `import' statements at the top
# Project: GBS Tool
# Author: Jeremy VanderMeer, jbvandermeer@alaska.edu
# Date: October 18, 2017
# License: MIT License (see LICENSE file of this package for more information)

# this function is for the reading of a CSV file of the type generated by AVEC
def readAvecCsv(fileName,fileLocation=''):
    # -------------- cd to file location ------------------------
    # TODO: Set this up such that it can easily setup with an interactive interface later (either command line or GUI)
    import os
    try:
        # try to see if the input file location is an absolute address
        os.chdir(fileLocation)
    except:
        # if it is not absolute, try to find it in the project folder
        dir = os.path.dirname(__file__)
        newdir = os.path.join(dir, '..\..\InputData', fileLocation)
        os.chdir(newdir)

    #------------------- load the file -----------------------------
    # TODO: yupp, pandas should do all the tricks we need it to do...
    import pandas as pd
    df = pd.read_csv(fileName) # read as a data frame

    import numpy as np
    x=np.array(df) # convert data frame to array (since every ~ 60th row is a header, which needs to be removed)

    # TODO: have you already found a good cheat sheet for regular expressions? Let me know if you need one.
    #import re
    #non_decimal = re.compile(r'[^\d.]+')
    #non_decimal.sub('', '12.345i5ii3')

    # convert to float. If not possible (headers), replace with the value 1000000 which will be eliminated
    gotHeader = False
    for i in range(x.shape[0]): # for all rows
        for j in range(x.shape[1]): # for all columns
            if isinstance(x[i,j],str): #if is string
                try: # try to convert to a float
                    x[i,j] = float(x[i, j])
                except: # if can't, replace with 1000000
                    if j==0: # for the first (Date) column. other columns have some string data
                        if gotHeader==False:
                            header = list(x[i,:])
                            gotHeader = True
                        x[i,:] = 1000000


    ind = x[:,0]==1000000 # find all rows with value 1000000
    x = x[~ind,:] # remove 1000000 values
    x_df = pd.DataFrame(x,columns=header) # convert back to a dataframe, with headers taken from the file.
    x_df.columns = x_df.columns.str.strip() # remove white spaces at begining and end of headers
    x_df.columns = x_df.columns.str.replace('\s+','_') # replace spaces in between with underscores

    # convert the date to datetime
    dt = datetime.fromordinal(datetime(1900, 1, 1).toordinal() + x_df.DATE.astype(int) - 2)
    tt = dt.timetuple()
    return x_df


x_df = readAvecCsv('ChevakDispatch201612.csv','Chevak')
import matplotlib.pyplot as plt
plt.plot(x_df.Date,x_df.Village_Load)